
package com.amazonaws.fps.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="PaymentInstruction" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TokenFriendlyName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="CallerReference" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TokenType" type="{http://fps.amazonaws.com/doc/2008-09-17/}TokenType" minOccurs="0"/>
 *         &lt;element name="PaymentReason" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Tue Sep 29 03:25:23 PDT 2009
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "paymentInstruction",
    "tokenFriendlyName",
    "callerReference",
    "tokenType",
    "paymentReason"
})
@XmlRootElement(name = "InstallPaymentInstructionRequest")
public class InstallPaymentInstructionRequest {

    @XmlElement(name = "PaymentInstruction")
    protected String paymentInstruction;
    @XmlElement(name = "TokenFriendlyName")
    protected String tokenFriendlyName;
    @XmlElement(name = "CallerReference")
    protected String callerReference;
    @XmlElement(name = "TokenType")
    protected TokenType tokenType;
    @XmlElement(name = "PaymentReason")
    protected String paymentReason;

    /**
     * Default constructor
     * 
     */
    public InstallPaymentInstructionRequest() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public InstallPaymentInstructionRequest(final String paymentInstruction, final String tokenFriendlyName, final String callerReference, final TokenType tokenType, final String paymentReason) {
        this.paymentInstruction = paymentInstruction;
        this.tokenFriendlyName = tokenFriendlyName;
        this.callerReference = callerReference;
        this.tokenType = tokenType;
        this.paymentReason = paymentReason;
    }

    /**
     * Gets the value of the paymentInstruction property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPaymentInstruction() {
        return paymentInstruction;
    }

    /**
     * Sets the value of the paymentInstruction property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaymentInstruction(String value) {
        this.paymentInstruction = value;
    }

    public boolean isSetPaymentInstruction() {
        return (this.paymentInstruction!= null);
    }

    /**
     * Gets the value of the tokenFriendlyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTokenFriendlyName() {
        return tokenFriendlyName;
    }

    /**
     * Sets the value of the tokenFriendlyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTokenFriendlyName(String value) {
        this.tokenFriendlyName = value;
    }

    public boolean isSetTokenFriendlyName() {
        return (this.tokenFriendlyName!= null);
    }

    /**
     * Gets the value of the callerReference property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCallerReference() {
        return callerReference;
    }

    /**
     * Sets the value of the callerReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCallerReference(String value) {
        this.callerReference = value;
    }

    public boolean isSetCallerReference() {
        return (this.callerReference!= null);
    }

    /**
     * Gets the value of the tokenType property.
     * 
     * @return
     *     possible object is
     *     {@link TokenType }
     *     
     */
    public TokenType getTokenType() {
        return tokenType;
    }

    /**
     * Sets the value of the tokenType property.
     * 
     * @param value
     *     allowed object is
     *     {@link TokenType }
     *     
     */
    public void setTokenType(TokenType value) {
        this.tokenType = value;
    }

    public boolean isSetTokenType() {
        return (this.tokenType!= null);
    }

    /**
     * Gets the value of the paymentReason property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPaymentReason() {
        return paymentReason;
    }

    /**
     * Sets the value of the paymentReason property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaymentReason(String value) {
        this.paymentReason = value;
    }

    public boolean isSetPaymentReason() {
        return (this.paymentReason!= null);
    }

    /**
     * Sets the value of the PaymentInstruction property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public InstallPaymentInstructionRequest withPaymentInstruction(String value) {
        setPaymentInstruction(value);
        return this;
    }

    /**
     * Sets the value of the TokenFriendlyName property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public InstallPaymentInstructionRequest withTokenFriendlyName(String value) {
        setTokenFriendlyName(value);
        return this;
    }

    /**
     * Sets the value of the CallerReference property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public InstallPaymentInstructionRequest withCallerReference(String value) {
        setCallerReference(value);
        return this;
    }

    /**
     * Sets the value of the TokenType property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public InstallPaymentInstructionRequest withTokenType(TokenType value) {
        setTokenType(value);
        return this;
    }

    /**
     * Sets the value of the PaymentReason property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public InstallPaymentInstructionRequest withPaymentReason(String value) {
        setPaymentReason(value);
        return this;
    }
    


    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetPaymentInstruction()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("PaymentInstruction"));
            json.append(" : ");
            json.append(quoteJSON(getPaymentInstruction()));
            first = false;
        }
        if (isSetTokenFriendlyName()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("TokenFriendlyName"));
            json.append(" : ");
            json.append(quoteJSON(getTokenFriendlyName()));
            first = false;
        }
        if (isSetCallerReference()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("CallerReference"));
            json.append(" : ");
            json.append(quoteJSON(getCallerReference()));
            first = false;
        }
        if (isSetTokenType()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("TokenType"));
            json.append(" : ");
            json.append(quoteJSON(getTokenType().value()));
            first = false;
        }
        if (isSetPaymentReason()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("PaymentReason"));
            json.append(" : ");
            json.append(quoteJSON(getPaymentReason()));
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '"':
                sb.append("\\\"");
                break;
            case '\\':
                sb.append("\\\\");
                break;
            case '/':
                sb.append("\\/");
                break;
            case '\b':
                sb.append("\\b");
                break;
            case '\f':
                sb.append("\\f");
                break;
            case '\n':
                sb.append("\\n");
                break;
            case '\r':
                sb.append("\\r");
                break;
            case '\t':
                sb.append("\\t");
                break;
            default:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
