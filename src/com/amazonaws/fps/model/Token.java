
package com.amazonaws.fps.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;


/**
 * <p>Java class for Token complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Token">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="TokenId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="FriendlyName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="TokenStatus" type="{http://fps.amazonaws.com/doc/2008-09-17/}TokenStatus"/>
 *         &lt;element name="DateInstalled" type="{http://www.w3.org/2001/XMLSchema}dateTime"/>
 *         &lt;element name="CallerReference" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="TokenType" type="{http://fps.amazonaws.com/doc/2008-09-17/}TokenType"/>
 *         &lt;element name="OldTokenId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="PaymentReason" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Tue Sep 29 03:25:23 PDT 2009
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Token", propOrder = {
    "tokenId",
    "friendlyName",
    "tokenStatus",
    "dateInstalled",
    "callerReference",
    "tokenType",
    "oldTokenId",
    "paymentReason"
})
public class Token {

    @XmlElement(name = "TokenId", required = true)
    protected String tokenId;
    @XmlElement(name = "FriendlyName", required = true)
    protected String friendlyName;
    @XmlElement(name = "TokenStatus", required = true)
    protected TokenStatus tokenStatus;
    @XmlElement(name = "DateInstalled", required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar dateInstalled;
    @XmlElement(name = "CallerReference", required = true)
    protected String callerReference;
    @XmlElement(name = "TokenType", required = true)
    protected TokenType tokenType;
    @XmlElement(name = "OldTokenId")
    protected String oldTokenId;
    @XmlElement(name = "PaymentReason")
    protected String paymentReason;

    /**
     * Default constructor
     * 
     */
    public Token() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public Token(final String tokenId, final String friendlyName, final TokenStatus tokenStatus, final XMLGregorianCalendar dateInstalled, final String callerReference, final TokenType tokenType, final String oldTokenId, final String paymentReason) {
        this.tokenId = tokenId;
        this.friendlyName = friendlyName;
        this.tokenStatus = tokenStatus;
        this.dateInstalled = dateInstalled;
        this.callerReference = callerReference;
        this.tokenType = tokenType;
        this.oldTokenId = oldTokenId;
        this.paymentReason = paymentReason;
    }

    /**
     * Gets the value of the tokenId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTokenId() {
        return tokenId;
    }

    /**
     * Sets the value of the tokenId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTokenId(String value) {
        this.tokenId = value;
    }

    public boolean isSetTokenId() {
        return (this.tokenId!= null);
    }

    /**
     * Gets the value of the friendlyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFriendlyName() {
        return friendlyName;
    }

    /**
     * Sets the value of the friendlyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFriendlyName(String value) {
        this.friendlyName = value;
    }

    public boolean isSetFriendlyName() {
        return (this.friendlyName!= null);
    }

    /**
     * Gets the value of the tokenStatus property.
     * 
     * @return
     *     possible object is
     *     {@link TokenStatus }
     *     
     */
    public TokenStatus getTokenStatus() {
        return tokenStatus;
    }

    /**
     * Sets the value of the tokenStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link TokenStatus }
     *     
     */
    public void setTokenStatus(TokenStatus value) {
        this.tokenStatus = value;
    }

    public boolean isSetTokenStatus() {
        return (this.tokenStatus!= null);
    }

    /**
     * Gets the value of the dateInstalled property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDateInstalled() {
        return dateInstalled;
    }

    /**
     * Sets the value of the dateInstalled property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDateInstalled(XMLGregorianCalendar value) {
        this.dateInstalled = value;
    }

    public boolean isSetDateInstalled() {
        return (this.dateInstalled!= null);
    }

    /**
     * Gets the value of the callerReference property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCallerReference() {
        return callerReference;
    }

    /**
     * Sets the value of the callerReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCallerReference(String value) {
        this.callerReference = value;
    }

    public boolean isSetCallerReference() {
        return (this.callerReference!= null);
    }

    /**
     * Gets the value of the tokenType property.
     * 
     * @return
     *     possible object is
     *     {@link TokenType }
     *     
     */
    public TokenType getTokenType() {
        return tokenType;
    }

    /**
     * Sets the value of the tokenType property.
     * 
     * @param value
     *     allowed object is
     *     {@link TokenType }
     *     
     */
    public void setTokenType(TokenType value) {
        this.tokenType = value;
    }

    public boolean isSetTokenType() {
        return (this.tokenType!= null);
    }

    /**
     * Gets the value of the oldTokenId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOldTokenId() {
        return oldTokenId;
    }

    /**
     * Sets the value of the oldTokenId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOldTokenId(String value) {
        this.oldTokenId = value;
    }

    public boolean isSetOldTokenId() {
        return (this.oldTokenId!= null);
    }

    /**
     * Gets the value of the paymentReason property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPaymentReason() {
        return paymentReason;
    }

    /**
     * Sets the value of the paymentReason property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPaymentReason(String value) {
        this.paymentReason = value;
    }

    public boolean isSetPaymentReason() {
        return (this.paymentReason!= null);
    }

    /**
     * Sets the value of the TokenId property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Token withTokenId(String value) {
        setTokenId(value);
        return this;
    }

    /**
     * Sets the value of the FriendlyName property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Token withFriendlyName(String value) {
        setFriendlyName(value);
        return this;
    }

    /**
     * Sets the value of the TokenStatus property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Token withTokenStatus(TokenStatus value) {
        setTokenStatus(value);
        return this;
    }

    /**
     * Sets the value of the DateInstalled property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Token withDateInstalled(XMLGregorianCalendar value) {
        setDateInstalled(value);
        return this;
    }

    /**
     * Sets the value of the CallerReference property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Token withCallerReference(String value) {
        setCallerReference(value);
        return this;
    }

    /**
     * Sets the value of the TokenType property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Token withTokenType(TokenType value) {
        setTokenType(value);
        return this;
    }

    /**
     * Sets the value of the OldTokenId property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Token withOldTokenId(String value) {
        setOldTokenId(value);
        return this;
    }

    /**
     * Sets the value of the PaymentReason property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public Token withPaymentReason(String value) {
        setPaymentReason(value);
        return this;
    }
    

    /**
     * 
     * XML fragment representation of this object
     * 
     * @return XML fragment for this object. Name for outer
     * tag expected to be set by calling method. This fragment
     * returns inner properties representation only
     */
    protected String toXMLFragment() {
        StringBuffer xml = new StringBuffer();
        if (isSetTokenId()) {
            xml.append("<TokenId>");
            xml.append(escapeXML(getTokenId()));
            xml.append("</TokenId>");
        }
        if (isSetFriendlyName()) {
            xml.append("<FriendlyName>");
            xml.append(escapeXML(getFriendlyName()));
            xml.append("</FriendlyName>");
        }
        if (isSetTokenStatus()) {
            xml.append("<TokenStatus>");
            xml.append(getTokenStatus().value());
            xml.append("</TokenStatus>");
        }
        if (isSetDateInstalled()) {
            xml.append("<DateInstalled>");
            xml.append(getDateInstalled() + "");
            xml.append("</DateInstalled>");
        }
        if (isSetCallerReference()) {
            xml.append("<CallerReference>");
            xml.append(escapeXML(getCallerReference()));
            xml.append("</CallerReference>");
        }
        if (isSetTokenType()) {
            xml.append("<TokenType>");
            xml.append(getTokenType().value());
            xml.append("</TokenType>");
        }
        if (isSetOldTokenId()) {
            xml.append("<OldTokenId>");
            xml.append(escapeXML(getOldTokenId()));
            xml.append("</OldTokenId>");
        }
        if (isSetPaymentReason()) {
            xml.append("<PaymentReason>");
            xml.append(escapeXML(getPaymentReason()));
            xml.append("</PaymentReason>");
        }
        return xml.toString();
    }

    /**
     * 
     * Escape XML special characters
     */
    private String escapeXML(String string) {
        StringBuffer sb = new StringBuffer();
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '&':
                sb.append("&amp;");
                break;
            case '<':
                sb.append("&lt;");
                break;
            case '>':
                sb.append("&gt;");
                break;
            case '\'':
                sb.append("&#039;");
                break;
            case '"':
                sb.append("&quot;");
                break;
            default:
                sb.append(c);
            }
        }
        return sb.toString();
    }



    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetTokenId()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("TokenId"));
            json.append(" : ");
            json.append(quoteJSON(getTokenId()));
            first = false;
        }
        if (isSetFriendlyName()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("FriendlyName"));
            json.append(" : ");
            json.append(quoteJSON(getFriendlyName()));
            first = false;
        }
        if (isSetTokenStatus()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("TokenStatus"));
            json.append(" : ");
            json.append(quoteJSON(getTokenStatus().value()));
            first = false;
        }
        if (isSetDateInstalled()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("DateInstalled"));
            json.append(" : ");
            json.append(quoteJSON(getDateInstalled() + ""));
            first = false;
        }
        if (isSetCallerReference()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("CallerReference"));
            json.append(" : ");
            json.append(quoteJSON(getCallerReference()));
            first = false;
        }
        if (isSetTokenType()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("TokenType"));
            json.append(" : ");
            json.append(quoteJSON(getTokenType().value()));
            first = false;
        }
        if (isSetOldTokenId()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("OldTokenId"));
            json.append(" : ");
            json.append(quoteJSON(getOldTokenId()));
            first = false;
        }
        if (isSetPaymentReason()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("PaymentReason"));
            json.append(" : ");
            json.append(quoteJSON(getPaymentReason()));
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '"':
                sb.append("\\\"");
                break;
            case '\\':
                sb.append("\\\\");
                break;
            case '/':
                sb.append("\\/");
                break;
            case '\b':
                sb.append("\\b");
                break;
            case '\f':
                sb.append("\\f");
                break;
            case '\n':
                sb.append("\\n");
                break;
            case '\r':
                sb.append("\\r");
                break;
            case '\t':
                sb.append("\\t");
                break;
            default:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
